@use "../abstracts/" as *;
@use "sass:list";

// 폼요소 공통디자인 정의
$formSettings: (
  "height": rem(40),
  "border": rem(1) solid $neutral-04-100,
  "borderRadius": rem(6),
  "bgColor": $white,
  "paddingInline": rem(16),
  "fontColor": $neutral-07-100,
  "fontSize": rem(16),
  "lineHeight": rem(26),
  "letterSpacing": rem(0),
  "placehodlerColor": $neutral-04-100,
  "disabledBgColor": rgba(#000, 0.1),
  "readonlyBgColor": rgba(#000, 0.05),
);

// Select디자인 정의
$selectSetting: (
  "bgUrl": "bg_select .svg",
  "iconPosition": rem(12),
  "bgWidth": 6,
  "paddingInline": 12,
);

// 라디오 & 체크박스 디자인 정의
$radioCheckSetting: (
  1: (
    "className": ".check-type1",
    "offImage": "ico_check_heart_off.svg",
    "onImage": "ico_check_heart_on.svg",
    "width": rem(20),
    "height": rem(20),
  ),
  2: (
    "className": ".check-type2",
    "offImage": "ico_check_off.svg",
    "onImage": "ico_check_on.svg",
    "width": rem(24),
    "height": rem(24),
  ),
  3: (
    "className": ".radio-type1",
    "offImage": "ico_radio_off.svg",
    "onImage": "ico_radio_on.svg",
    "width": rem(24),
    "height": rem(24),
  ),
);
//컬러체크박스
$colorCheckSetting: (
  1: (
    "className": ".chk__green",
    "bgColor": $green45,
    "width": rem(38),
    "height": rem(38),
  ),
  2: (
    "className": ".chk__blue",
    "bgColor": $blue,
    "width": rem(38),
    "height": rem(38),
  ),
  3: (
    "className": ".chk__yellow",
    "bgColor": $yellow,
    "width": rem(38),
    "height": rem(38),
  ),
  4: (
    "className": ".chk__red",
    "bgColor": $red,
    "width": rem(38),
    "height": rem(38),
  ),
  5: (
    "className": ".chk__black",
    "bgColor": $black,
    "width": rem(38),
    "height": rem(38),
  ),
);

%form {
  height: map-get($formSettings, height);
  border: map-get($formSettings, border);
  box-sizing: border-box;
  border-radius: map-get($formSettings, borderRadius);
  background-color: map-get($formSettings, bgColor);
  padding-inline: map-get($formSettings, paddingInline);
  color: map-get($formSettings, fontColor);
  font-size: map-get($formSettings, fontSize);
  line-height: map-get($formSettings, lineHeight);
  letter-spacing: map-get($formSettings, letterSpacing);
  &::placeholder {
    color: map-get($formSettings, placehodlerColor);
  }
  &:disabled {
    background: map-get($formSettings, disabledBgColor);
  }
  &[readonly] {
    background: map-get($formSettings, readonlyBgColor);
  }
}

%label {
  display: inline-flex;
  gap: rem(4);
  align-items: center;
  color: #000;
  font-size: rem(12);
  line-height: 1;
  letter-spacing: rem(-0.5);
}

@layer Components.Form {
  .input {
    @extend %form;
    width: var(--w, 100%);
  }

  .select {
    $result: map-get($selectSetting, paddingInline) * 2 + map-get($selectSetting, bgWidth);

    @extend %form;
    @include background(map-get($selectSetting, bgUrl), right map-get($selectSetting, iconPosition) center);
    padding-right: rem($result);
    appearance: none;
    width: var(--w, 100%);

    //디자인셀렉트박스
    //버튼
    &-btn {
      anchor-name: --selectbox;
      @extend %form;
      display: flex;
      align-items: center;
      justify-content: space-between;
      width: 100%;
      text-align: left;
      &::after {
        @include background("bg_select_down.svg");
        content: "";
        width: rem(24);
        height: rem(24);
      }
    }
    //옵션
    &-type1 {
      > ul {
        inset: anchor(--selectbox bottom) anchor(--selectbox right) auto anchor(--selectbox left);
        position: absolute;
        // display: grid;
        gap: rem(10);
        padding: rem(8);
        width: calc(100% - rem(16));
        border: none;
        &[popover]:popover-open {
          display: grid;
        }
        > li {
          > a {
            display: block;
            padding: rem(8);
            border-radius: rem(8);
            color: $neutral-04-100;
            font-size: rem(16);
            line-height: rem(26);
          }
          &.--active {
            a {
              background-color: $neutral-02-100;
              color: $neutral-07-100;
              font-weight: 600;
            }
          }
        }
      }
    }
  }

  .textarea {
    @extend %form;
    padding-block: rem(15);
    width: 100%;
    height: rem(var(--height, 10));
    &::placeholder {
      color: #000;
      font-family: "Noto Sans KR";
      font-size: rem(12);
      line-height: rem(12);
      letter-spacing: rem(-0.5);
    }
  }
  .mix-group1 {
    display: grid;

    &:has(:checked) {
      background-color: $neutral-02-100;
    }
    > div {
      @extend %form;
      display: flex;
      align-items: center;
      justify-content: space-between;
      font-size: rem(16);

      label {
        width: 100%;
        font-size: rem(16);
      }
    }
  }

  @for $idx from 1 through list.length($radioCheckSetting) {
    @include RadioCheckbox($radioCheckSetting, $idx);
  }
  @for $idx from 1 through list.length($colorCheckSetting) {
    @include ColorCheckbox($colorCheckSetting, $idx);
  }
}
